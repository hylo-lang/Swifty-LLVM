---
name: Test

on:
  push:
    branches: [ "**" ]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"

env:
  swift-version: '5.9'

jobs:
  dev-container:
    name: "Dev container: ${{ matrix.cmake_build_type }}"
    strategy: 
      fail-fast: false
      matrix:
        cmake_build_type: [Debug, Release]

        include:
          - cmake_build_type: Debug
            spm_configuration: debug
            HYLO_LLVM_BUILD_TYPE: Debug

          - cmake_build_type: Release
            spm_configuration: release
            HYLO_LLVM_BUILD_TYPE: MinSizeRel

    runs-on: ubuntu-latest
    steps:
    - name: Checkout (GitHub)
      uses: actions/checkout@v4
      with:
        submodules: true
        show-progress: false

    - name: Build and run via SPM
      uses: devcontainers/ci@v0.3
      env:
        HYLO_LLVM_BUILD_TYPE: ${{ matrix.HYLO_LLVM_BUILD_TYPE }}
      with:
        runCmd: swift test --parallel -c ${{ matrix.spm_configuration }}
        push: never

    - name: Build and run via CMake
      uses: devcontainers/ci@v0.3
      env:
        HYLO_LLVM_BUILD_TYPE: ${{ matrix.HYLO_LLVM_BUILD_TYPE }}
      with:
        runCmd: >-
          cmake -GNinja -S . -B .cmake-build
          -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          -DBUILD_TESTING=YES
          -DLLVM_DIR=/opt/llvm-${{ matrix.HYLO_LLVM_BUILD_TYPE }}/lib/cmake/llvm

          cmake --build .cmake-build

          ctest -V --test-dir .cmake-build
        push: never

  native:
    name: "Native: ${{ matrix.os }}/${{ matrix.spm_configuration }}"
    strategy:
      fail-fast: false
      matrix:
        # macos-latest is apparently not the latest.
        os: [windows-latest]
        spm_configuration: [debug]

        include:
          - HYLO_LLVM_DOWNLOAD_URL: https://github.com/hylo-lang/llvm-build/releases/download
          - HYLO_LLVM_BUILD_RELEASE: 20240303-215025
          - HYLO_LLVM_VERSION: 17.0.6
          - swift_test_options:
          - unpackage_command: tar -x --zstd -f
          - llvm_package_suffix: .tar.zst

          - spm_configuration: debug
            cmake_build_type: Debug
            HYLO_LLVM_BUILD_TYPE: MinSizeRel

          - os: windows-latest

            unpackage_command: 7z x -t7z
            llvm_package_suffix: .7z
            triple_suffix: unknown-windows-msvc17

    runs-on: ${{ matrix.os }}
    env:
      url_prefix: ${{ matrix.HYLO_LLVM_DOWNLOAD_URL }}/${{ matrix.HYLO_LLVM_BUILD_RELEASE }}
      llvm_package_basename: llvm-${{ matrix.HYLO_LLVM_VERSION }}-x86_64-${{ matrix.triple_suffix }}-${{ matrix.HYLO_LLVM_BUILD_TYPE }}

    steps:

    - name: Set up swift (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      uses: compnerd/gha-setup-swift@v0.2.1
      with:
        branch: swift-${{ env.swift-version }}-release
        tag: ${{ env.swift-version }}-RELEASE

    - name: Verify swift version
      run: ${{ matrix.os == 'macos-13' && 'xcrun' || '' }} swift --version

    # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if
    # not already: on subsequent runs both will be quickly restored from GitHub cache service.
    - uses: lukka/get-cmake@latest

    - name: Install LLVM
      # 7z doesn't support decompressing from a stream or we'd do
      # this all as one statement. Maybe we should find a way to use
      # zstd on windows.
      run: >-
        curl --no-progress-meter -L -O
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
        ${{ env.url_prefix }}/${{ env.llvm_package_basename }}${{ matrix.llvm_package_suffix }}

        ${{ matrix.unpackage_command }} ${{ env.llvm_package_basename }}${{ matrix.llvm_package_suffix }}

    - name: Checkout (GitHub)
      uses: actions/checkout@v4
      with:
        submodules: true
        show-progress: false
        path: Swifty-LLVM

    - name: Create LLVM pkgconfig file and make it findable
      run: >-
        set -ex -o pipefail

        mkdir pkg-config

        PATH="${{ github.workspace }}/${{ env.llvm_package_basename }}/bin:$PATH"
        Swifty-LLVM/Tools/make-pkgconfig.sh pkg-config/llvm.pc

        echo 'PKG_CONFIG_PATH=${{ github.workspace }}/pkg-config' >> $GITHUB_ENV
      shell: bash

    - name: Build and Test via SPM
      run: swift test -v ${{ matrix.swift_test_options }} -c ${{ matrix.spm_configuration }}
      working-directory: Swifty-LLVM

