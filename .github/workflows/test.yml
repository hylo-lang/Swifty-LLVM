---
name: Test

on:
  push:
    branches: [ main, reduction ]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"

env:
  swift-version: '5.9'

jobs:
  demo:
    name: 'See, gha-setup-swift is going wrong'
    strategy:
      fail-fast: false

    runs-on: windows-latest

    steps:
    - name: Set up swift (Windows)
      uses: compnerd/gha-setup-swift@v0.2.1
      with:
        branch: swift-${{ env.swift-version }}-release
        tag: ${{ env.swift-version }}-RELEASE

    - name: Fix PATH on Windows
      run: |
        $currentPath = $env:Path -split ';'
        $prefixes = @('C:\Program Files\Git\', 'C:\mingw64\')
        $pattern = '^(' + (($prefixes | ForEach-Object { [regex]::escape($_) }) -join '|') + ').*'
        $newPathHead = $currentPath | Where-Object { $_ -notmatch $pattern }
        $newPathTail = $currentPath | Where-Object { $_ -match $pattern }
        $newPath = $newPathHead + $newPathTail
        # $newPath | Set-Content -Path $env:GITHUB_PATH -Encoding utf8
        echo "$newPath" | Set-Content -Path $env:GITHUB_PATH -Encoding utf8

        # Clear the user path variable from the registry.
        [Environment]::SetEnvironmentVariable("Path", $null, "User")

        Get-Content -Path $env:GITHUB_ENV | Where-Object { $_ -notmatch '^' } | Set-Content -Path $env:GITHUB_ENV

        Write-Host "--------------------- GITHUB_PATH file ------------------------"
        type $env:GITHUB_PATH
        Write-Host "--------------------- GITHUB_ENV file ------------------------"
        type $env:GITHUB_ENV
        Write-Host "--------------------------------------------------------------"

    - name: Check that the path fix was sufficient.
      run: |
        Write-Host "--------------------- CURRENT_PATH ---------------------------"
        $env:Path -split ';'
        Write-Host "--------------------------------------------------------------"
        Write-Host "Full path to link: $((Get-Command "link").Path)"
        link /?
        if ($errorOccurred) { Exit 1 }
